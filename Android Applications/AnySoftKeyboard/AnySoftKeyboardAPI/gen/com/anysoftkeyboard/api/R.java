/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.anysoftkeyboard.api;

public final class R {
    public static final class attr {
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int action_done=0x7f010024;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int action_go=0x7f010026;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int action_search=0x7f010025;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int action_send=0x7f010027;
        /**  should automatically also be "functional" 
 if false, determine position of main key label/icon without accounting for 
 hint label. this may override the theme (e.g., if auto positioning is used), 
 but may be needed to make special keys look right 
 also useful for a short numeric row with highly-related popupCharacters where don't 
 want to clutter with hints but want main label/icon still centered 
 e.g., a "1" key that has popupCharacters="¹₁①" 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int adjustPosition=0x7f010055;
        /** <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int backgroundDimAmount=0x7f010017;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int extraHintIcon=0x7f01006d;
        /**  allow the key to have another hint to show that there are more characters in 
 popupCharacters than shown by the hint label (if not specified, none used) 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int extraHintLabel=0x7f01006c;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>3</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td></td></tr>
<tr><td><code>right</code></td><td>5</td><td></td></tr>
</table>
         */
        public static int extraHintLabelAlign=0x7f01006e;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>48</td><td></td></tr>
<tr><td><code>bottom</code></td><td>80</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td> less likely to support... </td></tr>
</table>
         */
        public static int extraHintLabelVAlign=0x7f01006f;
        /**  icon for the hint instead of a label 
 if icon and label specified, icon wins 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int hintIcon=0x7f010056;
        /**  The characters to display as a hint for the popup keyboard 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int hintLabel=0x7f01004a;
        /**  location of hint labels 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>3</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td></td></tr>
<tr><td><code>right</code></td><td>5</td><td></td></tr>
</table>
         */
        public static int hintLabelAlign=0x7f010068;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>48</td><td></td></tr>
<tr><td><code>bottom</code></td><td>80</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td> currently not supported </td></tr>
</table>
         */
        public static int hintLabelVAlign=0x7f010069;
        /**  FOR FUTURE EXPANSION - NOT YET SUPPORTED 
 hint icon to use when no hintLabel given and more than 3 characters in popupCharacters 
 or when longPressCode instead of popupCharacters (if not specified, app default used) 
 if both icon and label specified, icon wins 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int hintOverflowIcon=0x7f01006b;
        /**  hint label to use when hintLabel unspecified and more than 3 characters in 
 popupCharacters or when longPressCode instead of popupCharacters 
 (if none specified, app default used) 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int hintOverflowLabel=0x7f01006a;
        /**  Color to use for hint text. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int hintTextColor=0x7f010029;
        /**  Size of the text for hinting about long press output. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int hintTextSize=0x7f010028;
        /**  should support normal, key_type_feedback, action_done, action_done+key_type_feedback, action_search, action_search+key_type_feedback, action_go, action_go+key_type_feedback  
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyAction=0x7f010031;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyAlpha=0x7f010076;
        /**  should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyAlt=0x7f010077;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyArrowDown=0x7f010035;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyArrowLeft=0x7f010033;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyArrowRight=0x7f010032;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyArrowUp=0x7f010034;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyBackspace=0x7f01002c;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyCancel=0x7f01002f;
        /**  should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyControl=0x7f01002b;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyGlobe=0x7f010030;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyInputClear=0x7f010038;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyInputClipboardCopy=0x7f01003a;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyInputClipboardCut=0x7f01003b;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyInputClipboardPaste=0x7f01003c;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyInputMoveEnd=0x7f01003d;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyInputMoveHome=0x7f01003e;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyInputSelectAll=0x7f010039;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyMic=0x7f010036;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyNavigation=0x7f010078;
        /**  FOR FUTURE EXPANSION - NOT YET SUPPORTED 
 should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyNextKeyboard=0x7f010074;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeySettings=0x7f010037;
        /**  should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyShift=0x7f01002a;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeySpace=0x7f01002d;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeySymbols=0x7f010075;
        /**  should support normal, key_type_feedback 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int iconKeyTab=0x7f01002e;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int isAlpha=0x7f010051;
        /**  should automatically also be "functional" 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int isDelete=0x7f010054;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int isFunctional=0x7f010001;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int isNavigation=0x7f01004e;
        /**  should automatically also be "functional" 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int isNumeric=0x7f01004f;
        /**  flags the keyboard designer can set to help theme correctly style keys 
 (though, for the most part, these should be autodetected) 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int isPunctuation=0x7f01004d;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int isShift=0x7f010053;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int isSpace=0x7f010052;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int isSymbol=0x7f010050;
        /**  Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int keyBackground=0x7f010003;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyHorizontalGap=0x7f01000a;
        /**  Hysteresis distance for key debouncing 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyHysteresisDistance=0x7f010011;
        /**  allow main key label/icon to be in different positions 
 behavior before implemented: keyLabelIconAlign="center" keyLabelIconVAlign="auto" 
         <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>3</td><td> against left or right edge of key </td></tr>
<tr><td><code>right</code></td><td>5</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td> horizontally centered at center of key (adjusted only for key padding) </td></tr>
<tr><td><code>auto</code></td><td>7</td><td> centered, but also adjust position to account for hint label location </td></tr>
</table>
         */
        public static int keyLabelIconAlign=0x7f010070;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>48</td><td> against top or bottom edge of key </td></tr>
<tr><td><code>bottom</code></td><td>80</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td> vertically centered at center of key (adjusted only for key padding) </td></tr>
<tr><td><code>auto</code></td><td>112</td><td> centered, but also adjust position to account for hint label location </td></tr>
</table>
         */
        public static int keyLabelIconVAlign=0x7f010071;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyLargeHeight=0x7f010009;
        /**  size of different keys height 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyNormalHeight=0x7f010007;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int keyPreviewBackground=0x7f01000d;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyPreviewLabelTextSize=0x7f010010;
        /**  Vertical offset of the key press feedback from the key. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyPreviewOffset=0x7f01000c;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyPreviewTextColor=0x7f01000f;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyPreviewTextSize=0x7f01000e;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keySmallHeight=0x7f010008;
        /**  Color to use for the label in a key. 
         <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyTextColor=0x7f010006;
        /**  Size of the text for character keys. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyTextSize=0x7f010004;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
         */
        public static int keyTextStyle=0x7f010018;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyVerticalGap=0x7f01000b;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_action=0x7f010022;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_alpha=0x7f010046;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_delete=0x7f010049;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_feedback=0x7f010023;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_function=0x7f010021;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_navigation=0x7f010043;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_numeric=0x7f010044;
        /**  FOR FUTURE EXPANSION - NOT YET SUPPORTED 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_punctuation=0x7f010042;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_shift=0x7f010048;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_space=0x7f010047;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int key_type_symbol=0x7f010045;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyboardNameTextColor=0x7f01007b;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int keyboardNameTextSize=0x7f01007a;
        /**  keyboard wallpaper - this is the image BEHIND the keyboard, it is visible when switching layout with animation 
         <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int keyboardWallpaper=0x7f010079;
        /**  Size of the text for custom keys with some text and no icon. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int labelTextSize=0x7f010005;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int longPressCode=0x7f010000;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int shadowColor=0x7f010013;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int shadowOffsetX=0x7f010015;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int shadowOffsetY=0x7f010016;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int shadowRadius=0x7f010014;
        /** <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int shiftedCodes=0x7f010002;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int shiftedHintLabel=0x7f01004c;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int shiftedKeyLabel=0x7f01003f;
        /**  FOR FUTURE EXPANSION - NOT YET SUPPORTED 
 lets us have lower-case letters as popupCharacters that 
 aren't affected by state of SHIFT key (e.g., pi) 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int shiftedPopupCharacters=0x7f01004b;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int showExtraHintOnPreview=0x7f010073;
        /**  show hint and/or extra hint on preview 
         <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int showHintOnPreview=0x7f010072;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int suggestionBackgroundImage=0x7f01001e;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int suggestionDividerImage=0x7f01001f;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int suggestionNormalTextColor=0x7f01001a;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int suggestionOthersTextColor=0x7f01001c;
        /**  Size of the text for the prefered word. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int suggestionPreferedWordTextSize=0x7f010040;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int suggestionRecommendedTextColor=0x7f01001b;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int suggestionStripHeight=0x7f010020;
        /** <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int suggestionTextSize=0x7f01001d;
        /**  vertical padding. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int suggestionWordXGap=0x7f010041;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeDownCode=0x7f01005a;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeDownColor=0x7f010066;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int swipeDownIcon=0x7f010065;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeDownLabel=0x7f010064;
        /**  size of the swipe labels 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeLabelSize=0x7f010067;
        /**  swipe in different directions on a key to get different codes 
 suggested to have noHint="true" if using swipe and long-press for keys 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeLeftCode=0x7f010057;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeLeftColor=0x7f01005d;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int swipeLeftIcon=0x7f01005c;
        /**  labels and icons for the different swipe directions 
 default to using label or icon based on code 
 if both icon and label specified, icon wins 
         <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeLeftLabel=0x7f01005b;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeRightCode=0x7f010058;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeRightColor=0x7f010060;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int swipeRightIcon=0x7f01005f;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeRightLabel=0x7f01005e;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeUpCode=0x7f010059;
        /** <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeUpColor=0x7f010063;
        /** <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
         */
        public static int swipeUpIcon=0x7f010062;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int swipeUpLabel=0x7f010061;
        /** <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>white</code></td><td>0</td><td></td></tr>
<tr><td><code>black</code></td><td>1</td><td></td></tr>
</table>
         */
        public static int symbolColorScheme=0x7f010019;
        /**  Amount to offset the touch Y coordinate by, for bias correction. 
         <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static int verticalCorrection=0x7f010012;
    }
    public static final class drawable {
        public static int ic_launcher=0x7f020000;
    }
    public static final class id {
        public static int auto=0x7f03000a;
        public static int black=0x7f030004;
        public static int bold=0x7f030001;
        public static int bottom=0x7f030009;
        public static int center=0x7f030006;
        public static int italic=0x7f030002;
        public static int left=0x7f030005;
        public static int normal=0x7f030000;
        public static int right=0x7f030007;
        public static int top=0x7f030008;
        public static int white=0x7f030003;
    }
    public static final class integer {
        public static int extension_keyboard_type_bottom_row=0x7f040000;
        public static int extension_keyboard_type_extension_keyboard=0x7f040002;
        public static int extension_keyboard_type_top_row=0x7f040001;
        public static int extension_keyboard_type_utility_keyboard=0x7f040003;
        public static int key_code_alt=0x7f04000f;
        public static int key_code_arrow_down=0x7f04001b;
        public static int key_code_arrow_left=0x7f040018;
        public static int key_code_arrow_right=0x7f040019;
        public static int key_code_arrow_up=0x7f04001a;
        public static int key_code_cancel=0x7f040020;
        public static int key_code_clear_input=0x7f040009;
        public static int key_code_clipboard=0x7f04001f;
        public static int key_code_ctrl=0x7f040010;
        public static int key_code_delete=0x7f040008;
        public static int key_code_delete_word=0x7f040024;
        public static int key_code_domain=0x7f04000d;
        public static int key_code_enter=0x7f040007;
        public static int key_code_esc=0x7f040004;
        public static int key_code_keyboard_cycle=0x7f040014;
        public static int key_code_keyboard_cycle_inside_mode=0x7f040016;
        public static int key_code_keyboard_mode_change=0x7f040017;
        public static int key_code_keyboard_reverse_cycle=0x7f040015;
        public static int key_code_merge_layout=0x7f040022;
        public static int key_code_mode_alphabet=0x7f040012;
        public static int key_code_mode_alphabet_popup=0x7f040013;
        public static int key_code_mode_symbols=0x7f040011;
        public static int key_code_move_end=0x7f04001d;
        public static int key_code_move_home=0x7f04001c;
        public static int key_code_quick_text=0x7f04000b;
        public static int key_code_quick_text_popup=0x7f04000c;
        public static int key_code_settings=0x7f04001e;
        public static int key_code_shift=0x7f04000e;
        public static int key_code_space=0x7f040006;
        public static int key_code_split_layout=0x7f040021;
        public static int key_code_tab=0x7f040005;
        public static int key_code_utility_keyboard=0x7f040023;
        public static int key_code_voice_input=0x7f04000a;
        public static int key_normal_height=0x7f040026;
        public static int key_short_height=0x7f040027;
        public static int key_tall_height=0x7f040028;
        public static int key_zero_height=0x7f040025;
        public static int keyboard_mode_email=0x7f04002c;
        public static int keyboard_mode_im=0x7f04002a;
        public static int keyboard_mode_normal=0x7f040029;
        public static int keyboard_mode_url=0x7f04002b;
    }
    public static final class string {
        public static int notification_contenttitle=0x7f050000;
    }
    public static final class styleable {
        /** Attributes that can be used with a AnyKeyboardBaseView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_android_background com.anysoftkeyboard.api:android_background}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_android_paddingBottom com.anysoftkeyboard.api:android_paddingBottom}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_android_paddingLeft com.anysoftkeyboard.api:android_paddingLeft}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_android_paddingRight com.anysoftkeyboard.api:android_paddingRight}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_android_paddingTop com.anysoftkeyboard.api:android_paddingTop}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_backgroundDimAmount com.anysoftkeyboard.api:backgroundDimAmount}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyBackground com.anysoftkeyboard.api:keyBackground}</code></td><td> Image for the key.</td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyHorizontalGap com.anysoftkeyboard.api:keyHorizontalGap}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyHysteresisDistance com.anysoftkeyboard.api:keyHysteresisDistance}</code></td><td> Hysteresis distance for key debouncing </td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyLargeHeight com.anysoftkeyboard.api:keyLargeHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyNormalHeight com.anysoftkeyboard.api:keyNormalHeight}</code></td><td> size of different keys height </td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyPreviewBackground com.anysoftkeyboard.api:keyPreviewBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyPreviewLabelTextSize com.anysoftkeyboard.api:keyPreviewLabelTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyPreviewOffset com.anysoftkeyboard.api:keyPreviewOffset}</code></td><td> Vertical offset of the key press feedback from the key.</td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyPreviewTextColor com.anysoftkeyboard.api:keyPreviewTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyPreviewTextSize com.anysoftkeyboard.api:keyPreviewTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keySmallHeight com.anysoftkeyboard.api:keySmallHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyTextColor com.anysoftkeyboard.api:keyTextColor}</code></td><td> Color to use for the label in a key.</td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyTextSize com.anysoftkeyboard.api:keyTextSize}</code></td><td> Size of the text for character keys.</td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyTextStyle com.anysoftkeyboard.api:keyTextStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_keyVerticalGap com.anysoftkeyboard.api:keyVerticalGap}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_labelTextSize com.anysoftkeyboard.api:labelTextSize}</code></td><td> Size of the text for custom keys with some text and no icon.</td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_shadowColor com.anysoftkeyboard.api:shadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_shadowOffsetX com.anysoftkeyboard.api:shadowOffsetX}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_shadowOffsetY com.anysoftkeyboard.api:shadowOffsetY}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_shadowRadius com.anysoftkeyboard.api:shadowRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_suggestionBackgroundImage com.anysoftkeyboard.api:suggestionBackgroundImage}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_suggestionDividerImage com.anysoftkeyboard.api:suggestionDividerImage}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_suggestionNormalTextColor com.anysoftkeyboard.api:suggestionNormalTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_suggestionOthersTextColor com.anysoftkeyboard.api:suggestionOthersTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_suggestionRecommendedTextColor com.anysoftkeyboard.api:suggestionRecommendedTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_suggestionStripHeight com.anysoftkeyboard.api:suggestionStripHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_suggestionTextSize com.anysoftkeyboard.api:suggestionTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_symbolColorScheme com.anysoftkeyboard.api:symbolColorScheme}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseView_verticalCorrection com.anysoftkeyboard.api:verticalCorrection}</code></td><td> Amount to offset the touch Y coordinate by, for bias correction.</td></tr>
           </table>
           @see #AnyKeyboardBaseView_android_background
           @see #AnyKeyboardBaseView_android_paddingBottom
           @see #AnyKeyboardBaseView_android_paddingLeft
           @see #AnyKeyboardBaseView_android_paddingRight
           @see #AnyKeyboardBaseView_android_paddingTop
           @see #AnyKeyboardBaseView_backgroundDimAmount
           @see #AnyKeyboardBaseView_keyBackground
           @see #AnyKeyboardBaseView_keyHorizontalGap
           @see #AnyKeyboardBaseView_keyHysteresisDistance
           @see #AnyKeyboardBaseView_keyLargeHeight
           @see #AnyKeyboardBaseView_keyNormalHeight
           @see #AnyKeyboardBaseView_keyPreviewBackground
           @see #AnyKeyboardBaseView_keyPreviewLabelTextSize
           @see #AnyKeyboardBaseView_keyPreviewOffset
           @see #AnyKeyboardBaseView_keyPreviewTextColor
           @see #AnyKeyboardBaseView_keyPreviewTextSize
           @see #AnyKeyboardBaseView_keySmallHeight
           @see #AnyKeyboardBaseView_keyTextColor
           @see #AnyKeyboardBaseView_keyTextSize
           @see #AnyKeyboardBaseView_keyTextStyle
           @see #AnyKeyboardBaseView_keyVerticalGap
           @see #AnyKeyboardBaseView_labelTextSize
           @see #AnyKeyboardBaseView_shadowColor
           @see #AnyKeyboardBaseView_shadowOffsetX
           @see #AnyKeyboardBaseView_shadowOffsetY
           @see #AnyKeyboardBaseView_shadowRadius
           @see #AnyKeyboardBaseView_suggestionBackgroundImage
           @see #AnyKeyboardBaseView_suggestionDividerImage
           @see #AnyKeyboardBaseView_suggestionNormalTextColor
           @see #AnyKeyboardBaseView_suggestionOthersTextColor
           @see #AnyKeyboardBaseView_suggestionRecommendedTextColor
           @see #AnyKeyboardBaseView_suggestionStripHeight
           @see #AnyKeyboardBaseView_suggestionTextSize
           @see #AnyKeyboardBaseView_symbolColorScheme
           @see #AnyKeyboardBaseView_verticalCorrection
         */
        public static final int[] AnyKeyboardBaseView = {
            0x010100d4, 0x010100d6, 0x010100d7, 0x010100d8,
            0x010100d9, 0x7f010003, 0x7f010004, 0x7f010005,
            0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009,
            0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d,
            0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011,
            0x7f010012, 0x7f010013, 0x7f010014, 0x7f010015,
            0x7f010016, 0x7f010017, 0x7f010018, 0x7f010019,
            0x7f01001a, 0x7f01001b, 0x7f01001c, 0x7f01001d,
            0x7f01001e, 0x7f01001f, 0x7f010020
        };
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#android_background}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.
          @attr name android:android_background
        */
        public static final int AnyKeyboardBaseView_android_background = 0;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#android_paddingBottom}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.
          @attr name android:android_paddingBottom
        */
        public static final int AnyKeyboardBaseView_android_paddingBottom = 4;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#android_paddingLeft}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.
          @attr name android:android_paddingLeft
        */
        public static final int AnyKeyboardBaseView_android_paddingLeft = 1;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#android_paddingRight}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.
          @attr name android:android_paddingRight
        */
        public static final int AnyKeyboardBaseView_android_paddingRight = 3;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#android_paddingTop}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.
          @attr name android:android_paddingTop
        */
        public static final int AnyKeyboardBaseView_android_paddingTop = 2;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#backgroundDimAmount}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:backgroundDimAmount
        */
        public static final int AnyKeyboardBaseView_backgroundDimAmount = 25;
        /**
          <p>
          @attr description
           Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:keyBackground
        */
        public static final int AnyKeyboardBaseView_keyBackground = 5;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyHorizontalGap}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyHorizontalGap
        */
        public static final int AnyKeyboardBaseView_keyHorizontalGap = 12;
        /**
          <p>
          @attr description
           Hysteresis distance for key debouncing 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyHysteresisDistance
        */
        public static final int AnyKeyboardBaseView_keyHysteresisDistance = 19;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyLargeHeight}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyLargeHeight
        */
        public static final int AnyKeyboardBaseView_keyLargeHeight = 11;
        /**
          <p>
          @attr description
           size of different keys height 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyNormalHeight
        */
        public static final int AnyKeyboardBaseView_keyNormalHeight = 9;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyPreviewBackground}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:keyPreviewBackground
        */
        public static final int AnyKeyboardBaseView_keyPreviewBackground = 15;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyPreviewLabelTextSize}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyPreviewLabelTextSize
        */
        public static final int AnyKeyboardBaseView_keyPreviewLabelTextSize = 18;
        /**
          <p>
          @attr description
           Vertical offset of the key press feedback from the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyPreviewOffset
        */
        public static final int AnyKeyboardBaseView_keyPreviewOffset = 14;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyPreviewTextColor}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyPreviewTextColor
        */
        public static final int AnyKeyboardBaseView_keyPreviewTextColor = 17;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyPreviewTextSize}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyPreviewTextSize
        */
        public static final int AnyKeyboardBaseView_keyPreviewTextSize = 16;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keySmallHeight}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keySmallHeight
        */
        public static final int AnyKeyboardBaseView_keySmallHeight = 10;
        /**
          <p>
          @attr description
           Color to use for the label in a key. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyTextColor
        */
        public static final int AnyKeyboardBaseView_keyTextColor = 8;
        /**
          <p>
          @attr description
           Size of the text for character keys. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyTextSize
        */
        public static final int AnyKeyboardBaseView_keyTextSize = 6;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyTextStyle}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          @attr name android:keyTextStyle
        */
        public static final int AnyKeyboardBaseView_keyTextStyle = 26;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyVerticalGap}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyVerticalGap
        */
        public static final int AnyKeyboardBaseView_keyVerticalGap = 13;
        /**
          <p>
          @attr description
           Size of the text for custom keys with some text and no icon. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:labelTextSize
        */
        public static final int AnyKeyboardBaseView_labelTextSize = 7;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shadowColor}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shadowColor
        */
        public static final int AnyKeyboardBaseView_shadowColor = 21;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shadowOffsetX}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shadowOffsetX
        */
        public static final int AnyKeyboardBaseView_shadowOffsetX = 23;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shadowOffsetY}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shadowOffsetY
        */
        public static final int AnyKeyboardBaseView_shadowOffsetY = 24;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shadowRadius}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shadowRadius
        */
        public static final int AnyKeyboardBaseView_shadowRadius = 22;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionBackgroundImage}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:suggestionBackgroundImage
        */
        public static final int AnyKeyboardBaseView_suggestionBackgroundImage = 32;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionDividerImage}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:suggestionDividerImage
        */
        public static final int AnyKeyboardBaseView_suggestionDividerImage = 33;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionNormalTextColor}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionNormalTextColor
        */
        public static final int AnyKeyboardBaseView_suggestionNormalTextColor = 28;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionOthersTextColor}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionOthersTextColor
        */
        public static final int AnyKeyboardBaseView_suggestionOthersTextColor = 30;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionRecommendedTextColor}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionRecommendedTextColor
        */
        public static final int AnyKeyboardBaseView_suggestionRecommendedTextColor = 29;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionStripHeight}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionStripHeight
        */
        public static final int AnyKeyboardBaseView_suggestionStripHeight = 34;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionTextSize}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionTextSize
        */
        public static final int AnyKeyboardBaseView_suggestionTextSize = 31;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#symbolColorScheme}
          attribute's value can be found in the {@link #AnyKeyboardBaseView} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>white</code></td><td>0</td><td></td></tr>
<tr><td><code>black</code></td><td>1</td><td></td></tr>
</table>
          @attr name android:symbolColorScheme
        */
        public static final int AnyKeyboardBaseView_symbolColorScheme = 27;
        /**
          <p>
          @attr description
           Amount to offset the touch Y coordinate by, for bias correction. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:verticalCorrection
        */
        public static final int AnyKeyboardBaseView_verticalCorrection = 20;
        /** Attributes that can be used with a AnyKeyboardBaseViewV2.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV2_hintTextColor com.anysoftkeyboard.api:hintTextColor}</code></td><td> Color to use for hint text.</td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV2_hintTextSize com.anysoftkeyboard.api:hintTextSize}</code></td><td> Size of the text for hinting about long press output.</td></tr>
           </table>
           @see #AnyKeyboardBaseViewV2_hintTextColor
           @see #AnyKeyboardBaseViewV2_hintTextSize
         */
        public static final int[] AnyKeyboardBaseViewV2 = {
            0x7f010028, 0x7f010029
        };
        /**
          <p>
          @attr description
           Color to use for hint text. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:hintTextColor
        */
        public static final int AnyKeyboardBaseViewV2_hintTextColor = 1;
        /**
          <p>
          @attr description
           Size of the text for hinting about long press output. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:hintTextSize
        */
        public static final int AnyKeyboardBaseViewV2_hintTextSize = 0;
        /** Attributes that can be used with a AnyKeyboardBaseViewV3.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV3_suggestionPreferedWordTextSize com.anysoftkeyboard.api:suggestionPreferedWordTextSize}</code></td><td> Size of the text for the prefered word.</td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV3_suggestionWordXGap com.anysoftkeyboard.api:suggestionWordXGap}</code></td><td> vertical padding.</td></tr>
           </table>
           @see #AnyKeyboardBaseViewV3_suggestionPreferedWordTextSize
           @see #AnyKeyboardBaseViewV3_suggestionWordXGap
         */
        public static final int[] AnyKeyboardBaseViewV3 = {
            0x7f010040, 0x7f010041
        };
        /**
          <p>
          @attr description
           Size of the text for the prefered word. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:suggestionPreferedWordTextSize
        */
        public static final int AnyKeyboardBaseViewV3_suggestionPreferedWordTextSize = 0;
        /**
          <p>
          @attr description
           vertical padding. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:suggestionWordXGap
        */
        public static final int AnyKeyboardBaseViewV3_suggestionWordXGap = 1;
        /**  expected behavior if showHintOnPreview="false" and showExtraHintOnPreview="true" 
 is that extra hint is shown if any long press or popupCharacters for key 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_extraHintIcon com.anysoftkeyboard.api:extraHintIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_extraHintLabel com.anysoftkeyboard.api:extraHintLabel}</code></td><td> allow the key to have another hint to show that there are more characters in 
 popupCharacters than shown by the hint label (if not specified, none used) </td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_extraHintLabelAlign com.anysoftkeyboard.api:extraHintLabelAlign}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_extraHintLabelVAlign com.anysoftkeyboard.api:extraHintLabelVAlign}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_hintLabelAlign com.anysoftkeyboard.api:hintLabelAlign}</code></td><td> location of hint labels </td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_hintLabelVAlign com.anysoftkeyboard.api:hintLabelVAlign}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_hintOverflowIcon com.anysoftkeyboard.api:hintOverflowIcon}</code></td><td> FOR FUTURE EXPANSION - NOT YET SUPPORTED 
 hint icon to use when no hintLabel given and more than 3 characters in popupCharacters 
 or when longPressCode instead of popupCharacters (if not specified, app default used) 
 if both icon and label specified, icon wins </td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_hintOverflowLabel com.anysoftkeyboard.api:hintOverflowLabel}</code></td><td> hint label to use when hintLabel unspecified and more than 3 characters in 
 popupCharacters or when longPressCode instead of popupCharacters 
 (if none specified, app default used) </td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_keyLabelIconAlign com.anysoftkeyboard.api:keyLabelIconAlign}</code></td><td> allow main key label/icon to be in different positions 
 behavior before implemented: keyLabelIconAlign="center" keyLabelIconVAlign="auto" </td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_keyLabelIconVAlign com.anysoftkeyboard.api:keyLabelIconVAlign}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_showExtraHintOnPreview com.anysoftkeyboard.api:showExtraHintOnPreview}</code></td><td></td></tr>
           <tr><td><code>{@link #AnyKeyboardBaseViewV4_showHintOnPreview com.anysoftkeyboard.api:showHintOnPreview}</code></td><td> show hint and/or extra hint on preview </td></tr>
           </table>
           @see #AnyKeyboardBaseViewV4_extraHintIcon
           @see #AnyKeyboardBaseViewV4_extraHintLabel
           @see #AnyKeyboardBaseViewV4_extraHintLabelAlign
           @see #AnyKeyboardBaseViewV4_extraHintLabelVAlign
           @see #AnyKeyboardBaseViewV4_hintLabelAlign
           @see #AnyKeyboardBaseViewV4_hintLabelVAlign
           @see #AnyKeyboardBaseViewV4_hintOverflowIcon
           @see #AnyKeyboardBaseViewV4_hintOverflowLabel
           @see #AnyKeyboardBaseViewV4_keyLabelIconAlign
           @see #AnyKeyboardBaseViewV4_keyLabelIconVAlign
           @see #AnyKeyboardBaseViewV4_showExtraHintOnPreview
           @see #AnyKeyboardBaseViewV4_showHintOnPreview
         */
        public static final int[] AnyKeyboardBaseViewV4 = {
            0x7f010068, 0x7f010069, 0x7f01006a, 0x7f01006b,
            0x7f01006c, 0x7f01006d, 0x7f01006e, 0x7f01006f,
            0x7f010070, 0x7f010071, 0x7f010072, 0x7f010073
        };
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#extraHintIcon}
          attribute's value can be found in the {@link #AnyKeyboardBaseViewV4} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:extraHintIcon
        */
        public static final int AnyKeyboardBaseViewV4_extraHintIcon = 5;
        /**
          <p>
          @attr description
           allow the key to have another hint to show that there are more characters in 
 popupCharacters than shown by the hint label (if not specified, none used) 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:extraHintLabel
        */
        public static final int AnyKeyboardBaseViewV4_extraHintLabel = 4;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#extraHintLabelAlign}
          attribute's value can be found in the {@link #AnyKeyboardBaseViewV4} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>3</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td></td></tr>
<tr><td><code>right</code></td><td>5</td><td></td></tr>
</table>
          @attr name android:extraHintLabelAlign
        */
        public static final int AnyKeyboardBaseViewV4_extraHintLabelAlign = 6;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#extraHintLabelVAlign}
          attribute's value can be found in the {@link #AnyKeyboardBaseViewV4} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>48</td><td></td></tr>
<tr><td><code>bottom</code></td><td>80</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td> less likely to support... </td></tr>
</table>
          @attr name android:extraHintLabelVAlign
        */
        public static final int AnyKeyboardBaseViewV4_extraHintLabelVAlign = 7;
        /**
          <p>
          @attr description
           location of hint labels 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>3</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td></td></tr>
<tr><td><code>right</code></td><td>5</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:hintLabelAlign
        */
        public static final int AnyKeyboardBaseViewV4_hintLabelAlign = 0;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#hintLabelVAlign}
          attribute's value can be found in the {@link #AnyKeyboardBaseViewV4} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>48</td><td></td></tr>
<tr><td><code>bottom</code></td><td>80</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td> currently not supported </td></tr>
</table>
          @attr name android:hintLabelVAlign
        */
        public static final int AnyKeyboardBaseViewV4_hintLabelVAlign = 1;
        /**
          <p>
          @attr description
           FOR FUTURE EXPANSION - NOT YET SUPPORTED 
 hint icon to use when no hintLabel given and more than 3 characters in popupCharacters 
 or when longPressCode instead of popupCharacters (if not specified, app default used) 
 if both icon and label specified, icon wins 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:hintOverflowIcon
        */
        public static final int AnyKeyboardBaseViewV4_hintOverflowIcon = 3;
        /**
          <p>
          @attr description
           hint label to use when hintLabel unspecified and more than 3 characters in 
 popupCharacters or when longPressCode instead of popupCharacters 
 (if none specified, app default used) 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:hintOverflowLabel
        */
        public static final int AnyKeyboardBaseViewV4_hintOverflowLabel = 2;
        /**
          <p>
          @attr description
           allow main key label/icon to be in different positions 
 behavior before implemented: keyLabelIconAlign="center" keyLabelIconVAlign="auto" 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>3</td><td> against left or right edge of key </td></tr>
<tr><td><code>right</code></td><td>5</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td> horizontally centered at center of key (adjusted only for key padding) </td></tr>
<tr><td><code>auto</code></td><td>7</td><td> centered, but also adjust position to account for hint label location </td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:keyLabelIconAlign
        */
        public static final int AnyKeyboardBaseViewV4_keyLabelIconAlign = 8;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyLabelIconVAlign}
          attribute's value can be found in the {@link #AnyKeyboardBaseViewV4} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>48</td><td> against top or bottom edge of key </td></tr>
<tr><td><code>bottom</code></td><td>80</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td> vertically centered at center of key (adjusted only for key padding) </td></tr>
<tr><td><code>auto</code></td><td>112</td><td> centered, but also adjust position to account for hint label location </td></tr>
</table>
          @attr name android:keyLabelIconVAlign
        */
        public static final int AnyKeyboardBaseViewV4_keyLabelIconVAlign = 9;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#showExtraHintOnPreview}
          attribute's value can be found in the {@link #AnyKeyboardBaseViewV4} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:showExtraHintOnPreview
        */
        public static final int AnyKeyboardBaseViewV4_showExtraHintOnPreview = 11;
        /**
          <p>
          @attr description
           show hint and/or extra hint on preview 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:showHintOnPreview
        */
        public static final int AnyKeyboardBaseViewV4_showHintOnPreview = 10;
        /** Attributes that can be used with a AnySoftKeyboardKeyIcons.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyAction com.anysoftkeyboard.api:iconKeyAction}</code></td><td> should support normal, key_type_feedback, action_done, action_done+key_type_feedback, action_search, action_search+key_type_feedback, action_go, action_go+key_type_feedback  </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyArrowDown com.anysoftkeyboard.api:iconKeyArrowDown}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyArrowLeft com.anysoftkeyboard.api:iconKeyArrowLeft}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyArrowRight com.anysoftkeyboard.api:iconKeyArrowRight}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyArrowUp com.anysoftkeyboard.api:iconKeyArrowUp}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyBackspace com.anysoftkeyboard.api:iconKeyBackspace}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyCancel com.anysoftkeyboard.api:iconKeyCancel}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyControl com.anysoftkeyboard.api:iconKeyControl}</code></td><td> should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyGlobe com.anysoftkeyboard.api:iconKeyGlobe}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyInputClear com.anysoftkeyboard.api:iconKeyInputClear}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyInputClipboardCopy com.anysoftkeyboard.api:iconKeyInputClipboardCopy}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyInputClipboardCut com.anysoftkeyboard.api:iconKeyInputClipboardCut}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyInputClipboardPaste com.anysoftkeyboard.api:iconKeyInputClipboardPaste}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyInputMoveEnd com.anysoftkeyboard.api:iconKeyInputMoveEnd}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyInputMoveHome com.anysoftkeyboard.api:iconKeyInputMoveHome}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyInputSelectAll com.anysoftkeyboard.api:iconKeyInputSelectAll}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyMic com.anysoftkeyboard.api:iconKeyMic}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeySettings com.anysoftkeyboard.api:iconKeySettings}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyShift com.anysoftkeyboard.api:iconKeyShift}</code></td><td> should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeySpace com.anysoftkeyboard.api:iconKeySpace}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIcons_iconKeyTab com.anysoftkeyboard.api:iconKeyTab}</code></td><td> should support normal, key_type_feedback </td></tr>
           </table>
           @see #AnySoftKeyboardKeyIcons_iconKeyAction
           @see #AnySoftKeyboardKeyIcons_iconKeyArrowDown
           @see #AnySoftKeyboardKeyIcons_iconKeyArrowLeft
           @see #AnySoftKeyboardKeyIcons_iconKeyArrowRight
           @see #AnySoftKeyboardKeyIcons_iconKeyArrowUp
           @see #AnySoftKeyboardKeyIcons_iconKeyBackspace
           @see #AnySoftKeyboardKeyIcons_iconKeyCancel
           @see #AnySoftKeyboardKeyIcons_iconKeyControl
           @see #AnySoftKeyboardKeyIcons_iconKeyGlobe
           @see #AnySoftKeyboardKeyIcons_iconKeyInputClear
           @see #AnySoftKeyboardKeyIcons_iconKeyInputClipboardCopy
           @see #AnySoftKeyboardKeyIcons_iconKeyInputClipboardCut
           @see #AnySoftKeyboardKeyIcons_iconKeyInputClipboardPaste
           @see #AnySoftKeyboardKeyIcons_iconKeyInputMoveEnd
           @see #AnySoftKeyboardKeyIcons_iconKeyInputMoveHome
           @see #AnySoftKeyboardKeyIcons_iconKeyInputSelectAll
           @see #AnySoftKeyboardKeyIcons_iconKeyMic
           @see #AnySoftKeyboardKeyIcons_iconKeySettings
           @see #AnySoftKeyboardKeyIcons_iconKeyShift
           @see #AnySoftKeyboardKeyIcons_iconKeySpace
           @see #AnySoftKeyboardKeyIcons_iconKeyTab
         */
        public static final int[] AnySoftKeyboardKeyIcons = {
            0x7f01002a, 0x7f01002b, 0x7f01002c, 0x7f01002d,
            0x7f01002e, 0x7f01002f, 0x7f010030, 0x7f010031,
            0x7f010032, 0x7f010033, 0x7f010034, 0x7f010035,
            0x7f010036, 0x7f010037, 0x7f010038, 0x7f010039,
            0x7f01003a, 0x7f01003b, 0x7f01003c, 0x7f01003d,
            0x7f01003e
        };
        /**
          <p>
          @attr description
           should support normal, key_type_feedback, action_done, action_done+key_type_feedback, action_search, action_search+key_type_feedback, action_go, action_go+key_type_feedback  


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyAction
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyAction = 7;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyArrowDown
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyArrowDown = 11;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyArrowLeft
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyArrowLeft = 9;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyArrowRight
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyArrowRight = 8;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyArrowUp
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyArrowUp = 10;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyBackspace
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyBackspace = 2;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyCancel
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyCancel = 5;
        /**
          <p>
          @attr description
           should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyControl
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyControl = 1;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyGlobe
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyGlobe = 6;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputClear
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyInputClear = 14;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputClipboardCopy
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyInputClipboardCopy = 16;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputClipboardCut
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyInputClipboardCut = 17;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputClipboardPaste
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyInputClipboardPaste = 18;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputMoveEnd
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyInputMoveEnd = 19;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputMoveHome
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyInputMoveHome = 20;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputSelectAll
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyInputSelectAll = 15;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyMic
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyMic = 12;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeySettings
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeySettings = 13;
        /**
          <p>
          @attr description
           should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyShift
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyShift = 0;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeySpace
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeySpace = 3;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyTab
        */
        public static final int AnySoftKeyboardKeyIcons_iconKeyTab = 4;
        /** Attributes that can be used with a AnySoftKeyboardKeyIconsV2.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIconsV2_iconKeyAlpha com.anysoftkeyboard.api:iconKeyAlpha}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIconsV2_iconKeyAlt com.anysoftkeyboard.api:iconKeyAlt}</code></td><td> should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIconsV2_iconKeyNavigation com.anysoftkeyboard.api:iconKeyNavigation}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIconsV2_iconKeyNextKeyboard com.anysoftkeyboard.api:iconKeyNextKeyboard}</code></td><td> FOR FUTURE EXPANSION - NOT YET SUPPORTED 
 should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardKeyIconsV2_iconKeySymbols com.anysoftkeyboard.api:iconKeySymbols}</code></td><td> should support normal, key_type_feedback </td></tr>
           </table>
           @see #AnySoftKeyboardKeyIconsV2_iconKeyAlpha
           @see #AnySoftKeyboardKeyIconsV2_iconKeyAlt
           @see #AnySoftKeyboardKeyIconsV2_iconKeyNavigation
           @see #AnySoftKeyboardKeyIconsV2_iconKeyNextKeyboard
           @see #AnySoftKeyboardKeyIconsV2_iconKeySymbols
         */
        public static final int[] AnySoftKeyboardKeyIconsV2 = {
            0x7f010074, 0x7f010075, 0x7f010076, 0x7f010077,
            0x7f010078
        };
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyAlpha
        */
        public static final int AnySoftKeyboardKeyIconsV2_iconKeyAlpha = 2;
        /**
          <p>
          @attr description
           should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyAlt
        */
        public static final int AnySoftKeyboardKeyIconsV2_iconKeyAlt = 3;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyNavigation
        */
        public static final int AnySoftKeyboardKeyIconsV2_iconKeyNavigation = 4;
        /**
          <p>
          @attr description
           FOR FUTURE EXPANSION - NOT YET SUPPORTED 
 should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyNextKeyboard
        */
        public static final int AnySoftKeyboardKeyIconsV2_iconKeyNextKeyboard = 0;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeySymbols
        */
        public static final int AnySoftKeyboardKeyIconsV2_iconKeySymbols = 1;
        /** Attributes that can be used with a AnySoftKeyboardTheme.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_android_background com.anysoftkeyboard.api:android_background}</code></td><td> keyboard background - this is the layout's background, it moves with the layout when there are animations </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_android_paddingBottom com.anysoftkeyboard.api:android_paddingBottom}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_android_paddingLeft com.anysoftkeyboard.api:android_paddingLeft}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_android_paddingRight com.anysoftkeyboard.api:android_paddingRight}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_android_paddingTop com.anysoftkeyboard.api:android_paddingTop}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_backgroundDimAmount com.anysoftkeyboard.api:backgroundDimAmount}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_hintLabelAlign com.anysoftkeyboard.api:hintLabelAlign}</code></td><td> location of hint labels </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_hintLabelVAlign com.anysoftkeyboard.api:hintLabelVAlign}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_hintOverflowLabel com.anysoftkeyboard.api:hintOverflowLabel}</code></td><td> default hint label to use when key has a longPressCode or more than 
 3 popupCharacters, but does not have a hintLabel defined </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_hintTextColor com.anysoftkeyboard.api:hintTextColor}</code></td><td> Color to use for hint text.</td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_hintTextSize com.anysoftkeyboard.api:hintTextSize}</code></td><td> Size of the text for hinting about long press output.</td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyBackground com.anysoftkeyboard.api:keyBackground}</code></td><td> Image for the key.</td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyHorizontalGap com.anysoftkeyboard.api:keyHorizontalGap}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyHysteresisDistance com.anysoftkeyboard.api:keyHysteresisDistance}</code></td><td> Hysteresis distance for key debouncing </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyLargeHeight com.anysoftkeyboard.api:keyLargeHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyNormalHeight com.anysoftkeyboard.api:keyNormalHeight}</code></td><td> size of different keys height </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyPreviewBackground com.anysoftkeyboard.api:keyPreviewBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyPreviewLabelTextSize com.anysoftkeyboard.api:keyPreviewLabelTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyPreviewOffset com.anysoftkeyboard.api:keyPreviewOffset}</code></td><td> Vertical offset of the key press feedback from the key.</td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyPreviewTextColor com.anysoftkeyboard.api:keyPreviewTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyPreviewTextSize com.anysoftkeyboard.api:keyPreviewTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keySmallHeight com.anysoftkeyboard.api:keySmallHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyTextColor com.anysoftkeyboard.api:keyTextColor}</code></td><td> Color to use for the label in a key.</td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyTextSize com.anysoftkeyboard.api:keyTextSize}</code></td><td> Size of the text for character keys.</td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyTextStyle com.anysoftkeyboard.api:keyTextStyle}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyVerticalGap com.anysoftkeyboard.api:keyVerticalGap}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyboardNameTextColor com.anysoftkeyboard.api:keyboardNameTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyboardNameTextSize com.anysoftkeyboard.api:keyboardNameTextSize}</code></td><td> text style for the label on the spacebar </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_keyboardWallpaper com.anysoftkeyboard.api:keyboardWallpaper}</code></td><td> keyboard wallpaper - this is the image BEHIND the keyboards, it is visible when switching layout with animation </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_labelTextSize com.anysoftkeyboard.api:labelTextSize}</code></td><td> Size of the text for custom keys with some text and no icon.</td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_shadowColor com.anysoftkeyboard.api:shadowColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_shadowOffsetX com.anysoftkeyboard.api:shadowOffsetX}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_shadowOffsetY com.anysoftkeyboard.api:shadowOffsetY}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_shadowRadius com.anysoftkeyboard.api:shadowRadius}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_suggestionBackgroundImage com.anysoftkeyboard.api:suggestionBackgroundImage}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_suggestionDividerImage com.anysoftkeyboard.api:suggestionDividerImage}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_suggestionNormalTextColor com.anysoftkeyboard.api:suggestionNormalTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_suggestionOthersTextColor com.anysoftkeyboard.api:suggestionOthersTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_suggestionPreferedWordTextSize com.anysoftkeyboard.api:suggestionPreferedWordTextSize}</code></td><td> Size of the text for the prefered word.</td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_suggestionRecommendedTextColor com.anysoftkeyboard.api:suggestionRecommendedTextColor}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_suggestionStripHeight com.anysoftkeyboard.api:suggestionStripHeight}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_suggestionTextSize com.anysoftkeyboard.api:suggestionTextSize}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_suggestionWordXGap com.anysoftkeyboard.api:suggestionWordXGap}</code></td><td> horizontal padding.</td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_symbolColorScheme com.anysoftkeyboard.api:symbolColorScheme}</code></td><td></td></tr>
           <tr><td><code>{@link #AnySoftKeyboardTheme_verticalCorrection com.anysoftkeyboard.api:verticalCorrection}</code></td><td> Amount to offset the touch Y coordinate by, for bias correction.</td></tr>
           </table>
           @see #AnySoftKeyboardTheme_android_background
           @see #AnySoftKeyboardTheme_android_paddingBottom
           @see #AnySoftKeyboardTheme_android_paddingLeft
           @see #AnySoftKeyboardTheme_android_paddingRight
           @see #AnySoftKeyboardTheme_android_paddingTop
           @see #AnySoftKeyboardTheme_backgroundDimAmount
           @see #AnySoftKeyboardTheme_hintLabelAlign
           @see #AnySoftKeyboardTheme_hintLabelVAlign
           @see #AnySoftKeyboardTheme_hintOverflowLabel
           @see #AnySoftKeyboardTheme_hintTextColor
           @see #AnySoftKeyboardTheme_hintTextSize
           @see #AnySoftKeyboardTheme_keyBackground
           @see #AnySoftKeyboardTheme_keyHorizontalGap
           @see #AnySoftKeyboardTheme_keyHysteresisDistance
           @see #AnySoftKeyboardTheme_keyLargeHeight
           @see #AnySoftKeyboardTheme_keyNormalHeight
           @see #AnySoftKeyboardTheme_keyPreviewBackground
           @see #AnySoftKeyboardTheme_keyPreviewLabelTextSize
           @see #AnySoftKeyboardTheme_keyPreviewOffset
           @see #AnySoftKeyboardTheme_keyPreviewTextColor
           @see #AnySoftKeyboardTheme_keyPreviewTextSize
           @see #AnySoftKeyboardTheme_keySmallHeight
           @see #AnySoftKeyboardTheme_keyTextColor
           @see #AnySoftKeyboardTheme_keyTextSize
           @see #AnySoftKeyboardTheme_keyTextStyle
           @see #AnySoftKeyboardTheme_keyVerticalGap
           @see #AnySoftKeyboardTheme_keyboardNameTextColor
           @see #AnySoftKeyboardTheme_keyboardNameTextSize
           @see #AnySoftKeyboardTheme_keyboardWallpaper
           @see #AnySoftKeyboardTheme_labelTextSize
           @see #AnySoftKeyboardTheme_shadowColor
           @see #AnySoftKeyboardTheme_shadowOffsetX
           @see #AnySoftKeyboardTheme_shadowOffsetY
           @see #AnySoftKeyboardTheme_shadowRadius
           @see #AnySoftKeyboardTheme_suggestionBackgroundImage
           @see #AnySoftKeyboardTheme_suggestionDividerImage
           @see #AnySoftKeyboardTheme_suggestionNormalTextColor
           @see #AnySoftKeyboardTheme_suggestionOthersTextColor
           @see #AnySoftKeyboardTheme_suggestionPreferedWordTextSize
           @see #AnySoftKeyboardTheme_suggestionRecommendedTextColor
           @see #AnySoftKeyboardTheme_suggestionStripHeight
           @see #AnySoftKeyboardTheme_suggestionTextSize
           @see #AnySoftKeyboardTheme_suggestionWordXGap
           @see #AnySoftKeyboardTheme_symbolColorScheme
           @see #AnySoftKeyboardTheme_verticalCorrection
         */
        public static final int[] AnySoftKeyboardTheme = {
            0x010100d4, 0x010100d6, 0x010100d7, 0x010100d8,
            0x010100d9, 0x7f010003, 0x7f010004, 0x7f010005,
            0x7f010006, 0x7f010007, 0x7f010008, 0x7f010009,
            0x7f01000a, 0x7f01000b, 0x7f01000c, 0x7f01000d,
            0x7f01000e, 0x7f01000f, 0x7f010010, 0x7f010011,
            0x7f010012, 0x7f010013, 0x7f010014, 0x7f010015,
            0x7f010016, 0x7f010017, 0x7f010018, 0x7f010019,
            0x7f01001a, 0x7f01001b, 0x7f01001c, 0x7f01001d,
            0x7f01001e, 0x7f01001f, 0x7f010020, 0x7f010028,
            0x7f010029, 0x7f010040, 0x7f010041, 0x7f010068,
            0x7f010069, 0x7f01006a, 0x7f010079, 0x7f01007a,
            0x7f01007b
        };
        /**
          <p>
          @attr description
           keyboard background - this is the layout's background, it moves with the layout when there are animations 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_background}.
          @attr name android:android_background
        */
        public static final int AnySoftKeyboardTheme_android_background = 0;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#android_paddingBottom}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.
          @attr name android:android_paddingBottom
        */
        public static final int AnySoftKeyboardTheme_android_paddingBottom = 4;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#android_paddingLeft}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.
          @attr name android:android_paddingLeft
        */
        public static final int AnySoftKeyboardTheme_android_paddingLeft = 1;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#android_paddingRight}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.
          @attr name android:android_paddingRight
        */
        public static final int AnySoftKeyboardTheme_android_paddingRight = 3;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#android_paddingTop}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.
          @attr name android:android_paddingTop
        */
        public static final int AnySoftKeyboardTheme_android_paddingTop = 2;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#backgroundDimAmount}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a floating point value, such as "<code>1.2</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:backgroundDimAmount
        */
        public static final int AnySoftKeyboardTheme_backgroundDimAmount = 25;
        /**
          <p>
          @attr description
           location of hint labels 


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>left</code></td><td>3</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td></td></tr>
<tr><td><code>right</code></td><td>5</td><td></td></tr>
</table>
          <p>This is a private symbol.
          @attr name android:hintLabelAlign
        */
        public static final int AnySoftKeyboardTheme_hintLabelAlign = 39;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#hintLabelVAlign}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>top</code></td><td>48</td><td></td></tr>
<tr><td><code>bottom</code></td><td>80</td><td></td></tr>
<tr><td><code>center</code></td><td>17</td><td> currently not supported </td></tr>
</table>
          @attr name android:hintLabelVAlign
        */
        public static final int AnySoftKeyboardTheme_hintLabelVAlign = 40;
        /**
          <p>
          @attr description
           default hint label to use when key has a longPressCode or more than 
 3 popupCharacters, but does not have a hintLabel defined 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:hintOverflowLabel
        */
        public static final int AnySoftKeyboardTheme_hintOverflowLabel = 41;
        /**
          <p>
          @attr description
           Color to use for hint text. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:hintTextColor
        */
        public static final int AnySoftKeyboardTheme_hintTextColor = 36;
        /**
          <p>
          @attr description
           Size of the text for hinting about long press output. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:hintTextSize
        */
        public static final int AnySoftKeyboardTheme_hintTextSize = 35;
        /**
          <p>
          @attr description
           Image for the key. This image needs to be a StateListDrawable, with the following
             possible states: normal, pressed, checkable, checkable+pressed, checkable+checked,
             checkable+checked+pressed. 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:keyBackground
        */
        public static final int AnySoftKeyboardTheme_keyBackground = 5;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyHorizontalGap}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyHorizontalGap
        */
        public static final int AnySoftKeyboardTheme_keyHorizontalGap = 12;
        /**
          <p>
          @attr description
           Hysteresis distance for key debouncing 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyHysteresisDistance
        */
        public static final int AnySoftKeyboardTheme_keyHysteresisDistance = 19;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyLargeHeight}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyLargeHeight
        */
        public static final int AnySoftKeyboardTheme_keyLargeHeight = 11;
        /**
          <p>
          @attr description
           size of different keys height 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyNormalHeight
        */
        public static final int AnySoftKeyboardTheme_keyNormalHeight = 9;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyPreviewBackground}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:keyPreviewBackground
        */
        public static final int AnySoftKeyboardTheme_keyPreviewBackground = 15;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyPreviewLabelTextSize}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyPreviewLabelTextSize
        */
        public static final int AnySoftKeyboardTheme_keyPreviewLabelTextSize = 18;
        /**
          <p>
          @attr description
           Vertical offset of the key press feedback from the key. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyPreviewOffset
        */
        public static final int AnySoftKeyboardTheme_keyPreviewOffset = 14;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyPreviewTextColor}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyPreviewTextColor
        */
        public static final int AnySoftKeyboardTheme_keyPreviewTextColor = 17;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyPreviewTextSize}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyPreviewTextSize
        */
        public static final int AnySoftKeyboardTheme_keyPreviewTextSize = 16;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keySmallHeight}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keySmallHeight
        */
        public static final int AnySoftKeyboardTheme_keySmallHeight = 10;
        /**
          <p>
          @attr description
           Color to use for the label in a key. 


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyTextColor
        */
        public static final int AnySoftKeyboardTheme_keyTextColor = 8;
        /**
          <p>
          @attr description
           Size of the text for character keys. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyTextSize
        */
        public static final int AnySoftKeyboardTheme_keyTextSize = 6;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyTextStyle}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>normal</code></td><td>0</td><td></td></tr>
<tr><td><code>bold</code></td><td>1</td><td></td></tr>
<tr><td><code>italic</code></td><td>2</td><td></td></tr>
</table>
          @attr name android:keyTextStyle
        */
        public static final int AnySoftKeyboardTheme_keyTextStyle = 26;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyVerticalGap}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyVerticalGap
        */
        public static final int AnySoftKeyboardTheme_keyVerticalGap = 13;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#keyboardNameTextColor}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:keyboardNameTextColor
        */
        public static final int AnySoftKeyboardTheme_keyboardNameTextColor = 44;
        /**
          <p>
          @attr description
           text style for the label on the spacebar 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:keyboardNameTextSize
        */
        public static final int AnySoftKeyboardTheme_keyboardNameTextSize = 43;
        /**
          <p>
          @attr description
           keyboard wallpaper - this is the image BEHIND the keyboards, it is visible when switching layout with animation 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:keyboardWallpaper
        */
        public static final int AnySoftKeyboardTheme_keyboardWallpaper = 42;
        /**
          <p>
          @attr description
           Size of the text for custom keys with some text and no icon. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:labelTextSize
        */
        public static final int AnySoftKeyboardTheme_labelTextSize = 7;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shadowColor}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shadowColor
        */
        public static final int AnySoftKeyboardTheme_shadowColor = 21;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shadowOffsetX}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shadowOffsetX
        */
        public static final int AnySoftKeyboardTheme_shadowOffsetX = 23;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shadowOffsetY}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shadowOffsetY
        */
        public static final int AnySoftKeyboardTheme_shadowOffsetY = 24;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shadowRadius}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shadowRadius
        */
        public static final int AnySoftKeyboardTheme_shadowRadius = 22;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionBackgroundImage}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:suggestionBackgroundImage
        */
        public static final int AnySoftKeyboardTheme_suggestionBackgroundImage = 32;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionDividerImage}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:suggestionDividerImage
        */
        public static final int AnySoftKeyboardTheme_suggestionDividerImage = 33;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionNormalTextColor}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionNormalTextColor
        */
        public static final int AnySoftKeyboardTheme_suggestionNormalTextColor = 28;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionOthersTextColor}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionOthersTextColor
        */
        public static final int AnySoftKeyboardTheme_suggestionOthersTextColor = 30;
        /**
          <p>
          @attr description
           Size of the text for the prefered word. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:suggestionPreferedWordTextSize
        */
        public static final int AnySoftKeyboardTheme_suggestionPreferedWordTextSize = 37;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionRecommendedTextColor}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionRecommendedTextColor
        */
        public static final int AnySoftKeyboardTheme_suggestionRecommendedTextColor = 29;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionStripHeight}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionStripHeight
        */
        public static final int AnySoftKeyboardTheme_suggestionStripHeight = 34;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#suggestionTextSize}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:suggestionTextSize
        */
        public static final int AnySoftKeyboardTheme_suggestionTextSize = 31;
        /**
          <p>
          @attr description
           horizontal padding. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:suggestionWordXGap
        */
        public static final int AnySoftKeyboardTheme_suggestionWordXGap = 38;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#symbolColorScheme}
          attribute's value can be found in the {@link #AnySoftKeyboardTheme} array.


          <p>Must be one or more (separated by '|') of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>white</code></td><td>0</td><td></td></tr>
<tr><td><code>black</code></td><td>1</td><td></td></tr>
</table>
          @attr name android:symbolColorScheme
        */
        public static final int AnySoftKeyboardTheme_symbolColorScheme = 27;
        /**
          <p>
          @attr description
           Amount to offset the touch Y coordinate by, for bias correction. 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:verticalCorrection
        */
        public static final int AnySoftKeyboardTheme_verticalCorrection = 20;
        /** Attributes that can be used with a AnySoftKeyboardThemeKeyIcons.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyAction com.anysoftkeyboard.api:iconKeyAction}</code></td><td> should support normal, key_type_feedback, action_done, action_done+key_type_feedback, action_search, action_search+key_type_feedback, action_go, action_go+key_type_feedback  </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyArrowDown com.anysoftkeyboard.api:iconKeyArrowDown}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyArrowLeft com.anysoftkeyboard.api:iconKeyArrowLeft}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyArrowRight com.anysoftkeyboard.api:iconKeyArrowRight}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyArrowUp com.anysoftkeyboard.api:iconKeyArrowUp}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyBackspace com.anysoftkeyboard.api:iconKeyBackspace}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyCancel com.anysoftkeyboard.api:iconKeyCancel}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyControl com.anysoftkeyboard.api:iconKeyControl}</code></td><td> should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyGlobe com.anysoftkeyboard.api:iconKeyGlobe}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyInputClear com.anysoftkeyboard.api:iconKeyInputClear}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyInputClipboardCopy com.anysoftkeyboard.api:iconKeyInputClipboardCopy}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyInputClipboardCut com.anysoftkeyboard.api:iconKeyInputClipboardCut}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyInputClipboardPaste com.anysoftkeyboard.api:iconKeyInputClipboardPaste}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyInputMoveEnd com.anysoftkeyboard.api:iconKeyInputMoveEnd}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyInputMoveHome com.anysoftkeyboard.api:iconKeyInputMoveHome}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyInputSelectAll com.anysoftkeyboard.api:iconKeyInputSelectAll}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyMic com.anysoftkeyboard.api:iconKeyMic}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeySettings com.anysoftkeyboard.api:iconKeySettings}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyShift com.anysoftkeyboard.api:iconKeyShift}</code></td><td> should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeySpace com.anysoftkeyboard.api:iconKeySpace}</code></td><td> should support normal, key_type_feedback </td></tr>
           <tr><td><code>{@link #AnySoftKeyboardThemeKeyIcons_iconKeyTab com.anysoftkeyboard.api:iconKeyTab}</code></td><td> should support normal, key_type_feedback </td></tr>
           </table>
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyAction
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyArrowDown
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyArrowLeft
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyArrowRight
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyArrowUp
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyBackspace
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyCancel
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyControl
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyGlobe
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyInputClear
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyInputClipboardCopy
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyInputClipboardCut
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyInputClipboardPaste
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyInputMoveEnd
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyInputMoveHome
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyInputSelectAll
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyMic
           @see #AnySoftKeyboardThemeKeyIcons_iconKeySettings
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyShift
           @see #AnySoftKeyboardThemeKeyIcons_iconKeySpace
           @see #AnySoftKeyboardThemeKeyIcons_iconKeyTab
         */
        public static final int[] AnySoftKeyboardThemeKeyIcons = {
            0x7f01002a, 0x7f01002b, 0x7f01002c, 0x7f01002d,
            0x7f01002e, 0x7f01002f, 0x7f010030, 0x7f010031,
            0x7f010032, 0x7f010033, 0x7f010034, 0x7f010035,
            0x7f010036, 0x7f010037, 0x7f010038, 0x7f010039,
            0x7f01003a, 0x7f01003b, 0x7f01003c, 0x7f01003d,
            0x7f01003e
        };
        /**
          <p>
          @attr description
           should support normal, key_type_feedback, action_done, action_done+key_type_feedback, action_search, action_search+key_type_feedback, action_go, action_go+key_type_feedback  


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyAction
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyAction = 7;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyArrowDown
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyArrowDown = 11;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyArrowLeft
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyArrowLeft = 9;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyArrowRight
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyArrowRight = 8;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyArrowUp
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyArrowUp = 10;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyBackspace
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyBackspace = 2;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyCancel
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyCancel = 5;
        /**
          <p>
          @attr description
           should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyControl
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyControl = 1;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyGlobe
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyGlobe = 6;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputClear
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyInputClear = 14;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputClipboardCopy
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyInputClipboardCopy = 16;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputClipboardCut
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyInputClipboardCut = 17;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputClipboardPaste
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyInputClipboardPaste = 18;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputMoveEnd
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyInputMoveEnd = 19;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputMoveHome
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyInputMoveHome = 20;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyInputSelectAll
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyInputSelectAll = 15;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyMic
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyMic = 12;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeySettings
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeySettings = 13;
        /**
          <p>
          @attr description
           should support normal, android:state_pressed, key_type_feedback, android:state_pressed+key_type_feedback, android:state_checked, state_checked+key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyShift
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyShift = 0;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeySpace
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeySpace = 3;
        /**
          <p>
          @attr description
           should support normal, key_type_feedback 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:iconKeyTab
        */
        public static final int AnySoftKeyboardThemeKeyIcons_iconKeyTab = 4;
        /** Attributes that can be used with a Keyboard.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_android_horizontalGap com.anysoftkeyboard.api:android_horizontalGap}</code></td><td> Default horizontal gap between keys.</td></tr>
           <tr><td><code>{@link #Keyboard_android_keyHeight com.anysoftkeyboard.api:android_keyHeight}</code></td><td> Default height of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_android_keyWidth com.anysoftkeyboard.api:android_keyWidth}</code></td><td> Default width of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #Keyboard_android_verticalGap com.anysoftkeyboard.api:android_verticalGap}</code></td><td> Default vertical gap between rows of keys.</td></tr>
           </table>
           @see #Keyboard_android_horizontalGap
           @see #Keyboard_android_keyHeight
           @see #Keyboard_android_keyWidth
           @see #Keyboard_android_verticalGap
         */
        public static final int[] Keyboard = {
            0x0101023d, 0x0101023e, 0x0101023f, 0x01010240
        };
        /**
          <p>
          @attr description
           Default horizontal gap between keys. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_horizontalGap}.
          @attr name android:android_horizontalGap
        */
        public static final int Keyboard_android_horizontalGap = 2;
        /**
          <p>
          @attr description
           Default height of a key, in pixels or percentage of display width. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyHeight}.
          @attr name android:android_keyHeight
        */
        public static final int Keyboard_android_keyHeight = 1;
        /**
          <p>
          @attr description
           Default width of a key, in pixels or percentage of display width. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyWidth}.
          @attr name android:android_keyWidth
        */
        public static final int Keyboard_android_keyWidth = 0;
        /**
          <p>
          @attr description
           Default vertical gap between rows of keys. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_verticalGap}.
          @attr name android:android_verticalGap
        */
        public static final int Keyboard_android_verticalGap = 3;
        /** Attributes that can be used with a KeyboardLayout.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardLayout_android_horizontalGap com.anysoftkeyboard.api:android_horizontalGap}</code></td><td> Default horizontal gap between keys.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_android_keyHeight com.anysoftkeyboard.api:android_keyHeight}</code></td><td> Default height of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_android_keyWidth com.anysoftkeyboard.api:android_keyWidth}</code></td><td> Default width of a key, in pixels or percentage of display width.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_android_verticalGap com.anysoftkeyboard.api:android_verticalGap}</code></td><td> Default vertical gap between rows of keys.</td></tr>
           </table>
           @see #KeyboardLayout_android_horizontalGap
           @see #KeyboardLayout_android_keyHeight
           @see #KeyboardLayout_android_keyWidth
           @see #KeyboardLayout_android_verticalGap
         */
        public static final int[] KeyboardLayout = {
            0x0101023d, 0x0101023e, 0x0101023f, 0x01010240
        };
        /**
          <p>
          @attr description
           Default horizontal gap between keys. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_horizontalGap}.
          @attr name android:android_horizontalGap
        */
        public static final int KeyboardLayout_android_horizontalGap = 2;
        /**
          <p>
          @attr description
           Default height of a key, in pixels or percentage of display width. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyHeight}.
          @attr name android:android_keyHeight
        */
        public static final int KeyboardLayout_android_keyHeight = 1;
        /**
          <p>
          @attr description
           Default width of a key, in pixels or percentage of display width. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyWidth}.
          @attr name android:android_keyWidth
        */
        public static final int KeyboardLayout_android_keyWidth = 0;
        /**
          <p>
          @attr description
           Default vertical gap between rows of keys. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_verticalGap}.
          @attr name android:android_verticalGap
        */
        public static final int KeyboardLayout_android_verticalGap = 3;
        /** Attributes that can be used with a KeyboardLayout_Key.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_codes com.anysoftkeyboard.api:android_codes}</code></td><td> The unicode value or comma-separated values that this key outputs.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_iconPreview com.anysoftkeyboard.api:android_iconPreview}</code></td><td> The icon to show in the popup preview.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_isModifier com.anysoftkeyboard.api:android_isModifier}</code></td><td> Whether this is a modifier key such as Alt or Shift.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_isRepeatable com.anysoftkeyboard.api:android_isRepeatable}</code></td><td> Whether long-pressing on this key will make it repeat.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_isSticky com.anysoftkeyboard.api:android_isSticky}</code></td><td> Whether this is a toggle key.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_keyEdgeFlags com.anysoftkeyboard.api:android_keyEdgeFlags}</code></td><td> Key edge flags.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_keyIcon com.anysoftkeyboard.api:android_keyIcon}</code></td><td> The icon to display on the key instead of the label.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_keyLabel com.anysoftkeyboard.api:android_keyLabel}</code></td><td> The label to display on the key.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_keyOutputText com.anysoftkeyboard.api:android_keyOutputText}</code></td><td> The string of characters to output when this key is pressed.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_keyboardMode com.anysoftkeyboard.api:android_keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_popupCharacters com.anysoftkeyboard.api:android_popupCharacters}</code></td><td> The characters to display in the popup keyboard.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_android_popupKeyboard com.anysoftkeyboard.api:android_popupKeyboard}</code></td><td> The XML keyboard layout of any popup keyboard.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_hintLabel com.anysoftkeyboard.api:hintLabel}</code></td><td> The characters to display as a hint for the popup keyboard </td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_isFunctional com.anysoftkeyboard.api:isFunctional}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_longPressCode com.anysoftkeyboard.api:longPressCode}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_shiftedCodes com.anysoftkeyboard.api:shiftedCodes}</code></td><td></td></tr>
           <tr><td><code>{@link #KeyboardLayout_Key_shiftedKeyLabel com.anysoftkeyboard.api:shiftedKeyLabel}</code></td><td></td></tr>
           </table>
           @see #KeyboardLayout_Key_android_codes
           @see #KeyboardLayout_Key_android_iconPreview
           @see #KeyboardLayout_Key_android_isModifier
           @see #KeyboardLayout_Key_android_isRepeatable
           @see #KeyboardLayout_Key_android_isSticky
           @see #KeyboardLayout_Key_android_keyEdgeFlags
           @see #KeyboardLayout_Key_android_keyIcon
           @see #KeyboardLayout_Key_android_keyLabel
           @see #KeyboardLayout_Key_android_keyOutputText
           @see #KeyboardLayout_Key_android_keyboardMode
           @see #KeyboardLayout_Key_android_popupCharacters
           @see #KeyboardLayout_Key_android_popupKeyboard
           @see #KeyboardLayout_Key_hintLabel
           @see #KeyboardLayout_Key_isFunctional
           @see #KeyboardLayout_Key_longPressCode
           @see #KeyboardLayout_Key_shiftedCodes
           @see #KeyboardLayout_Key_shiftedKeyLabel
         */
        public static final int[] KeyboardLayout_Key = {
            0x01010242, 0x01010243, 0x01010244, 0x01010245,
            0x01010246, 0x01010247, 0x01010248, 0x01010249,
            0x0101024a, 0x0101024b, 0x0101024c, 0x0101024d,
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f01003f,
            0x7f01004a
        };
        /**
          <p>
          @attr description
           The unicode value or comma-separated values that this key outputs. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_codes}.
          @attr name android:android_codes
        */
        public static final int KeyboardLayout_Key_android_codes = 0;
        /**
          <p>
          @attr description
           The icon to show in the popup preview. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_iconPreview}.
          @attr name android:android_iconPreview
        */
        public static final int KeyboardLayout_Key_android_iconPreview = 7;
        /**
          <p>
          @attr description
           Whether this is a modifier key such as Alt or Shift. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_isModifier}.
          @attr name android:android_isModifier
        */
        public static final int KeyboardLayout_Key_android_isModifier = 4;
        /**
          <p>
          @attr description
           Whether long-pressing on this key will make it repeat. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_isRepeatable}.
          @attr name android:android_isRepeatable
        */
        public static final int KeyboardLayout_Key_android_isRepeatable = 6;
        /**
          <p>
          @attr description
           Whether this is a toggle key. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_isSticky}.
          @attr name android:android_isSticky
        */
        public static final int KeyboardLayout_Key_android_isSticky = 5;
        /**
          <p>
          @attr description
           Key edge flags. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyEdgeFlags}.
          @attr name android:android_keyEdgeFlags
        */
        public static final int KeyboardLayout_Key_android_keyEdgeFlags = 3;
        /**
          <p>
          @attr description
           The icon to display on the key instead of the label. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyIcon}.
          @attr name android:android_keyIcon
        */
        public static final int KeyboardLayout_Key_android_keyIcon = 10;
        /**
          <p>
          @attr description
           The label to display on the key. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyLabel}.
          @attr name android:android_keyLabel
        */
        public static final int KeyboardLayout_Key_android_keyLabel = 9;
        /**
          <p>
          @attr description
           The string of characters to output when this key is pressed. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyOutputText}.
          @attr name android:android_keyOutputText
        */
        public static final int KeyboardLayout_Key_android_keyOutputText = 8;
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the key will be skipped. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyboardMode}.
          @attr name android:android_keyboardMode
        */
        public static final int KeyboardLayout_Key_android_keyboardMode = 11;
        /**
          <p>
          @attr description
           The characters to display in the popup keyboard. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_popupCharacters}.
          @attr name android:android_popupCharacters
        */
        public static final int KeyboardLayout_Key_android_popupCharacters = 2;
        /**
          <p>
          @attr description
           The XML keyboard layout of any popup keyboard. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_popupKeyboard}.
          @attr name android:android_popupKeyboard
        */
        public static final int KeyboardLayout_Key_android_popupKeyboard = 1;
        /**
          <p>
          @attr description
           The characters to display as a hint for the popup keyboard 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:hintLabel
        */
        public static final int KeyboardLayout_Key_hintLabel = 16;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#isFunctional}
          attribute's value can be found in the {@link #KeyboardLayout_Key} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:isFunctional
        */
        public static final int KeyboardLayout_Key_isFunctional = 13;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#longPressCode}
          attribute's value can be found in the {@link #KeyboardLayout_Key} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:longPressCode
        */
        public static final int KeyboardLayout_Key_longPressCode = 12;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shiftedCodes}
          attribute's value can be found in the {@link #KeyboardLayout_Key} array.


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shiftedCodes
        */
        public static final int KeyboardLayout_Key_shiftedCodes = 14;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shiftedKeyLabel}
          attribute's value can be found in the {@link #KeyboardLayout_Key} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shiftedKeyLabel
        */
        public static final int KeyboardLayout_Key_shiftedKeyLabel = 15;
        /** Attributes that can be used with a KeyboardLayout_Row.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #KeyboardLayout_Row_android_keyboardMode com.anysoftkeyboard.api:android_keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #KeyboardLayout_Row_android_rowEdgeFlags com.anysoftkeyboard.api:android_rowEdgeFlags}</code></td><td> Row edge flags.</td></tr>
           </table>
           @see #KeyboardLayout_Row_android_keyboardMode
           @see #KeyboardLayout_Row_android_rowEdgeFlags
         */
        public static final int[] KeyboardLayout_Row = {
            0x01010241, 0x0101024d
        };
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the row will be skipped. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyboardMode}.
          @attr name android:android_keyboardMode
        */
        public static final int KeyboardLayout_Row_android_keyboardMode = 1;
        /**
          <p>
          @attr description
           Row edge flags. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_rowEdgeFlags}.
          @attr name android:android_rowEdgeFlags
        */
        public static final int KeyboardLayout_Row_android_rowEdgeFlags = 0;
        /** Attributes that can be used with a Keyboard_Key.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Key_android_codes com.anysoftkeyboard.api:android_codes}</code></td><td> The unicode value or comma-separated values that this key outputs.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_iconPreview com.anysoftkeyboard.api:android_iconPreview}</code></td><td> The icon to show in the popup preview.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_isModifier com.anysoftkeyboard.api:android_isModifier}</code></td><td> Whether this is a modifier key such as Alt or Shift.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_isRepeatable com.anysoftkeyboard.api:android_isRepeatable}</code></td><td> Whether long-pressing on this key will make it repeat.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_isSticky com.anysoftkeyboard.api:android_isSticky}</code></td><td> Whether this is a toggle key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_keyEdgeFlags com.anysoftkeyboard.api:android_keyEdgeFlags}</code></td><td> Key edge flags.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_keyIcon com.anysoftkeyboard.api:android_keyIcon}</code></td><td> The icon to display on the key instead of the label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_keyLabel com.anysoftkeyboard.api:android_keyLabel}</code></td><td> The label to display on the key.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_keyOutputText com.anysoftkeyboard.api:android_keyOutputText}</code></td><td> The string of characters to output when this key is pressed.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_keyboardMode com.anysoftkeyboard.api:android_keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_popupCharacters com.anysoftkeyboard.api:android_popupCharacters}</code></td><td> The characters to display in the popup keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_android_popupKeyboard com.anysoftkeyboard.api:android_popupKeyboard}</code></td><td> The XML keyboard layout of any popup keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_isFunctional com.anysoftkeyboard.api:isFunctional}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_longPressCode com.anysoftkeyboard.api:longPressCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_shiftedCodes com.anysoftkeyboard.api:shiftedCodes}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Key_android_codes
           @see #Keyboard_Key_android_iconPreview
           @see #Keyboard_Key_android_isModifier
           @see #Keyboard_Key_android_isRepeatable
           @see #Keyboard_Key_android_isSticky
           @see #Keyboard_Key_android_keyEdgeFlags
           @see #Keyboard_Key_android_keyIcon
           @see #Keyboard_Key_android_keyLabel
           @see #Keyboard_Key_android_keyOutputText
           @see #Keyboard_Key_android_keyboardMode
           @see #Keyboard_Key_android_popupCharacters
           @see #Keyboard_Key_android_popupKeyboard
           @see #Keyboard_Key_isFunctional
           @see #Keyboard_Key_longPressCode
           @see #Keyboard_Key_shiftedCodes
         */
        public static final int[] Keyboard_Key = {
            0x01010242, 0x01010243, 0x01010244, 0x01010245,
            0x01010246, 0x01010247, 0x01010248, 0x01010249,
            0x0101024a, 0x0101024b, 0x0101024c, 0x0101024d,
            0x7f010000, 0x7f010001, 0x7f010002
        };
        /**
          <p>
          @attr description
           The unicode value or comma-separated values that this key outputs. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_codes}.
          @attr name android:android_codes
        */
        public static final int Keyboard_Key_android_codes = 0;
        /**
          <p>
          @attr description
           The icon to show in the popup preview. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_iconPreview}.
          @attr name android:android_iconPreview
        */
        public static final int Keyboard_Key_android_iconPreview = 7;
        /**
          <p>
          @attr description
           Whether this is a modifier key such as Alt or Shift. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_isModifier}.
          @attr name android:android_isModifier
        */
        public static final int Keyboard_Key_android_isModifier = 4;
        /**
          <p>
          @attr description
           Whether long-pressing on this key will make it repeat. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_isRepeatable}.
          @attr name android:android_isRepeatable
        */
        public static final int Keyboard_Key_android_isRepeatable = 6;
        /**
          <p>
          @attr description
           Whether this is a toggle key. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_isSticky}.
          @attr name android:android_isSticky
        */
        public static final int Keyboard_Key_android_isSticky = 5;
        /**
          <p>
          @attr description
           Key edge flags. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyEdgeFlags}.
          @attr name android:android_keyEdgeFlags
        */
        public static final int Keyboard_Key_android_keyEdgeFlags = 3;
        /**
          <p>
          @attr description
           The icon to display on the key instead of the label. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyIcon}.
          @attr name android:android_keyIcon
        */
        public static final int Keyboard_Key_android_keyIcon = 10;
        /**
          <p>
          @attr description
           The label to display on the key. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyLabel}.
          @attr name android:android_keyLabel
        */
        public static final int Keyboard_Key_android_keyLabel = 9;
        /**
          <p>
          @attr description
           The string of characters to output when this key is pressed. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyOutputText}.
          @attr name android:android_keyOutputText
        */
        public static final int Keyboard_Key_android_keyOutputText = 8;
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the key will be skipped. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyboardMode}.
          @attr name android:android_keyboardMode
        */
        public static final int Keyboard_Key_android_keyboardMode = 11;
        /**
          <p>
          @attr description
           The characters to display in the popup keyboard. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_popupCharacters}.
          @attr name android:android_popupCharacters
        */
        public static final int Keyboard_Key_android_popupCharacters = 2;
        /**
          <p>
          @attr description
           The XML keyboard layout of any popup keyboard. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_popupKeyboard}.
          @attr name android:android_popupKeyboard
        */
        public static final int Keyboard_Key_android_popupKeyboard = 1;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#isFunctional}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:isFunctional
        */
        public static final int Keyboard_Key_isFunctional = 13;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#longPressCode}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:longPressCode
        */
        public static final int Keyboard_Key_longPressCode = 12;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shiftedCodes}
          attribute's value can be found in the {@link #Keyboard_Key} array.


          <p>May be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>May be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shiftedCodes
        */
        public static final int Keyboard_Key_shiftedCodes = 14;
        /**  for backword compatibility, it is required to be defined at the end... 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Key_v2_shiftedKeyLabel com.anysoftkeyboard.api:shiftedKeyLabel}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Key_v2_shiftedKeyLabel
         */
        public static final int[] Keyboard_Key_v2 = {
            0x7f01003f
        };
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shiftedKeyLabel}
          attribute's value can be found in the {@link #Keyboard_Key_v2} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shiftedKeyLabel
        */
        public static final int Keyboard_Key_v2_shiftedKeyLabel = 0;
        /** Attributes that can be used with a Keyboard_Key_v3.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_adjustPosition com.anysoftkeyboard.api:adjustPosition}</code></td><td> should automatically also be "functional" 
 if false, determine position of main key label/icon without accounting for 
 hint label.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_hintIcon com.anysoftkeyboard.api:hintIcon}</code></td><td> icon for the hint instead of a label 
 if icon and label specified, icon wins </td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_hintLabel com.anysoftkeyboard.api:hintLabel}</code></td><td> The characters to display as a hint for the popup keyboard </td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_isAlpha com.anysoftkeyboard.api:isAlpha}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_isDelete com.anysoftkeyboard.api:isDelete}</code></td><td> should automatically also be "functional" </td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_isNavigation com.anysoftkeyboard.api:isNavigation}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_isNumeric com.anysoftkeyboard.api:isNumeric}</code></td><td> should automatically also be "functional" </td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_isPunctuation com.anysoftkeyboard.api:isPunctuation}</code></td><td> flags the keyboard designer can set to help theme correctly style keys 
 (though, for the most part, these should be autodetected) </td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_isShift com.anysoftkeyboard.api:isShift}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_isSpace com.anysoftkeyboard.api:isSpace}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_isSymbol com.anysoftkeyboard.api:isSymbol}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_shiftedHintLabel com.anysoftkeyboard.api:shiftedHintLabel}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_shiftedPopupCharacters com.anysoftkeyboard.api:shiftedPopupCharacters}</code></td><td> FOR FUTURE EXPANSION - NOT YET SUPPORTED 
 lets us have lower-case letters as popupCharacters that 
 aren't affected by state of SHIFT key (e.</td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeDownCode com.anysoftkeyboard.api:swipeDownCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeDownColor com.anysoftkeyboard.api:swipeDownColor}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeDownIcon com.anysoftkeyboard.api:swipeDownIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeDownLabel com.anysoftkeyboard.api:swipeDownLabel}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeLabelSize com.anysoftkeyboard.api:swipeLabelSize}</code></td><td> size of the swipe labels </td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeLeftCode com.anysoftkeyboard.api:swipeLeftCode}</code></td><td> swipe in different directions on a key to get different codes 
 suggested to have noHint="true" if using swipe and long-press for keys </td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeLeftColor com.anysoftkeyboard.api:swipeLeftColor}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeLeftIcon com.anysoftkeyboard.api:swipeLeftIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeLeftLabel com.anysoftkeyboard.api:swipeLeftLabel}</code></td><td> labels and icons for the different swipe directions 
 default to using label or icon based on code 
 if both icon and label specified, icon wins </td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeRightCode com.anysoftkeyboard.api:swipeRightCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeRightColor com.anysoftkeyboard.api:swipeRightColor}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeRightIcon com.anysoftkeyboard.api:swipeRightIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeRightLabel com.anysoftkeyboard.api:swipeRightLabel}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeUpCode com.anysoftkeyboard.api:swipeUpCode}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeUpColor com.anysoftkeyboard.api:swipeUpColor}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeUpIcon com.anysoftkeyboard.api:swipeUpIcon}</code></td><td></td></tr>
           <tr><td><code>{@link #Keyboard_Key_v3_swipeUpLabel com.anysoftkeyboard.api:swipeUpLabel}</code></td><td></td></tr>
           </table>
           @see #Keyboard_Key_v3_adjustPosition
           @see #Keyboard_Key_v3_hintIcon
           @see #Keyboard_Key_v3_hintLabel
           @see #Keyboard_Key_v3_isAlpha
           @see #Keyboard_Key_v3_isDelete
           @see #Keyboard_Key_v3_isNavigation
           @see #Keyboard_Key_v3_isNumeric
           @see #Keyboard_Key_v3_isPunctuation
           @see #Keyboard_Key_v3_isShift
           @see #Keyboard_Key_v3_isSpace
           @see #Keyboard_Key_v3_isSymbol
           @see #Keyboard_Key_v3_shiftedHintLabel
           @see #Keyboard_Key_v3_shiftedPopupCharacters
           @see #Keyboard_Key_v3_swipeDownCode
           @see #Keyboard_Key_v3_swipeDownColor
           @see #Keyboard_Key_v3_swipeDownIcon
           @see #Keyboard_Key_v3_swipeDownLabel
           @see #Keyboard_Key_v3_swipeLabelSize
           @see #Keyboard_Key_v3_swipeLeftCode
           @see #Keyboard_Key_v3_swipeLeftColor
           @see #Keyboard_Key_v3_swipeLeftIcon
           @see #Keyboard_Key_v3_swipeLeftLabel
           @see #Keyboard_Key_v3_swipeRightCode
           @see #Keyboard_Key_v3_swipeRightColor
           @see #Keyboard_Key_v3_swipeRightIcon
           @see #Keyboard_Key_v3_swipeRightLabel
           @see #Keyboard_Key_v3_swipeUpCode
           @see #Keyboard_Key_v3_swipeUpColor
           @see #Keyboard_Key_v3_swipeUpIcon
           @see #Keyboard_Key_v3_swipeUpLabel
         */
        public static final int[] Keyboard_Key_v3 = {
            0x7f01004a, 0x7f01004b, 0x7f01004c, 0x7f01004d,
            0x7f01004e, 0x7f01004f, 0x7f010050, 0x7f010051,
            0x7f010052, 0x7f010053, 0x7f010054, 0x7f010055,
            0x7f010056, 0x7f010057, 0x7f010058, 0x7f010059,
            0x7f01005a, 0x7f01005b, 0x7f01005c, 0x7f01005d,
            0x7f01005e, 0x7f01005f, 0x7f010060, 0x7f010061,
            0x7f010062, 0x7f010063, 0x7f010064, 0x7f010065,
            0x7f010066, 0x7f010067
        };
        /**
          <p>
          @attr description
           should automatically also be "functional" 
 if false, determine position of main key label/icon without accounting for 
 hint label. this may override the theme (e.g., if auto positioning is used), 
 but may be needed to make special keys look right 
 also useful for a short numeric row with highly-related popupCharacters where don't 
 want to clutter with hints but want main label/icon still centered 
 e.g., a "1" key that has popupCharacters="¹₁①" 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:adjustPosition
        */
        public static final int Keyboard_Key_v3_adjustPosition = 11;
        /**
          <p>
          @attr description
           icon for the hint instead of a label 
 if icon and label specified, icon wins 


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          <p>This is a private symbol.
          @attr name android:hintIcon
        */
        public static final int Keyboard_Key_v3_hintIcon = 12;
        /**
          <p>
          @attr description
           The characters to display as a hint for the popup keyboard 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:hintLabel
        */
        public static final int Keyboard_Key_v3_hintLabel = 0;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#isAlpha}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:isAlpha
        */
        public static final int Keyboard_Key_v3_isAlpha = 7;
        /**
          <p>
          @attr description
           should automatically also be "functional" 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:isDelete
        */
        public static final int Keyboard_Key_v3_isDelete = 10;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#isNavigation}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:isNavigation
        */
        public static final int Keyboard_Key_v3_isNavigation = 4;
        /**
          <p>
          @attr description
           should automatically also be "functional" 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:isNumeric
        */
        public static final int Keyboard_Key_v3_isNumeric = 5;
        /**
          <p>
          @attr description
           flags the keyboard designer can set to help theme correctly style keys 
 (though, for the most part, these should be autodetected) 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:isPunctuation
        */
        public static final int Keyboard_Key_v3_isPunctuation = 3;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#isShift}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:isShift
        */
        public static final int Keyboard_Key_v3_isShift = 9;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#isSpace}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:isSpace
        */
        public static final int Keyboard_Key_v3_isSpace = 8;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#isSymbol}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:isSymbol
        */
        public static final int Keyboard_Key_v3_isSymbol = 6;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#shiftedHintLabel}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:shiftedHintLabel
        */
        public static final int Keyboard_Key_v3_shiftedHintLabel = 2;
        /**
          <p>
          @attr description
           FOR FUTURE EXPANSION - NOT YET SUPPORTED 
 lets us have lower-case letters as popupCharacters that 
 aren't affected by state of SHIFT key (e.g., pi) 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:shiftedPopupCharacters
        */
        public static final int Keyboard_Key_v3_shiftedPopupCharacters = 1;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeDownCode}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:swipeDownCode
        */
        public static final int Keyboard_Key_v3_swipeDownCode = 16;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeDownColor}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:swipeDownColor
        */
        public static final int Keyboard_Key_v3_swipeDownColor = 28;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeDownIcon}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:swipeDownIcon
        */
        public static final int Keyboard_Key_v3_swipeDownIcon = 27;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeDownLabel}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:swipeDownLabel
        */
        public static final int Keyboard_Key_v3_swipeDownLabel = 26;
        /**
          <p>
          @attr description
           size of the swipe labels 


          <p>Must be a dimension value, which is a floating point number appended with a unit such as "<code>14.5sp</code>".
Available units are: px (pixels), dp (density-independent pixels), sp (scaled pixels based on preferred font size),
in (inches), mm (millimeters).
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:swipeLabelSize
        */
        public static final int Keyboard_Key_v3_swipeLabelSize = 29;
        /**
          <p>
          @attr description
           swipe in different directions on a key to get different codes 
 suggested to have noHint="true" if using swipe and long-press for keys 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:swipeLeftCode
        */
        public static final int Keyboard_Key_v3_swipeLeftCode = 13;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeLeftColor}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:swipeLeftColor
        */
        public static final int Keyboard_Key_v3_swipeLeftColor = 19;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeLeftIcon}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:swipeLeftIcon
        */
        public static final int Keyboard_Key_v3_swipeLeftIcon = 18;
        /**
          <p>
          @attr description
           labels and icons for the different swipe directions 
 default to using label or icon based on code 
 if both icon and label specified, icon wins 


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:swipeLeftLabel
        */
        public static final int Keyboard_Key_v3_swipeLeftLabel = 17;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeRightCode}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:swipeRightCode
        */
        public static final int Keyboard_Key_v3_swipeRightCode = 14;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeRightColor}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:swipeRightColor
        */
        public static final int Keyboard_Key_v3_swipeRightColor = 22;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeRightIcon}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:swipeRightIcon
        */
        public static final int Keyboard_Key_v3_swipeRightIcon = 21;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeRightLabel}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:swipeRightLabel
        */
        public static final int Keyboard_Key_v3_swipeRightLabel = 20;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeUpCode}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:swipeUpCode
        */
        public static final int Keyboard_Key_v3_swipeUpCode = 15;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeUpColor}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a color value, in the form of "<code>#<i>rgb</i></code>", "<code>#<i>argb</i></code>",
"<code>#<i>rrggbb</i></code>", or "<code>#<i>aarrggbb</i></code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:swipeUpColor
        */
        public static final int Keyboard_Key_v3_swipeUpColor = 25;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeUpIcon}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a reference to another resource, in the form "<code>@[+][<i>package</i>:]<i>type</i>:<i>name</i></code>"
or to a theme attribute in the form "<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>".
          @attr name android:swipeUpIcon
        */
        public static final int Keyboard_Key_v3_swipeUpIcon = 24;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#swipeUpLabel}
          attribute's value can be found in the {@link #Keyboard_Key_v3} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:swipeUpLabel
        */
        public static final int Keyboard_Key_v3_swipeUpLabel = 23;
        /** Attributes that can be used with a Keyboard_Row.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Keyboard_Row_android_keyboardMode com.anysoftkeyboard.api:android_keyboardMode}</code></td><td> Mode of the keyboard.</td></tr>
           <tr><td><code>{@link #Keyboard_Row_android_rowEdgeFlags com.anysoftkeyboard.api:android_rowEdgeFlags}</code></td><td> Row edge flags.</td></tr>
           </table>
           @see #Keyboard_Row_android_keyboardMode
           @see #Keyboard_Row_android_rowEdgeFlags
         */
        public static final int[] Keyboard_Row = {
            0x01010241, 0x0101024d
        };
        /**
          <p>
          @attr description
           Mode of the keyboard. If the mode doesn't match the
             requested keyboard mode, the row will be skipped. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_keyboardMode}.
          @attr name android:android_keyboardMode
        */
        public static final int Keyboard_Row_android_keyboardMode = 1;
        /**
          <p>
          @attr description
           Row edge flags. 
          <p>This corresponds to the global attribute          resource symbol {@link com.anysoftkeyboard.api.R.attr#android_rowEdgeFlags}.
          @attr name android:android_rowEdgeFlags
        */
        public static final int Keyboard_Row_android_rowEdgeFlags = 0;
        /** Attributes that can be used with a keyActionType.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #keyActionType_action_done com.anysoftkeyboard.api:action_done}</code></td><td></td></tr>
           <tr><td><code>{@link #keyActionType_action_go com.anysoftkeyboard.api:action_go}</code></td><td></td></tr>
           <tr><td><code>{@link #keyActionType_action_search com.anysoftkeyboard.api:action_search}</code></td><td></td></tr>
           <tr><td><code>{@link #keyActionType_action_send com.anysoftkeyboard.api:action_send}</code></td><td></td></tr>
           </table>
           @see #keyActionType_action_done
           @see #keyActionType_action_go
           @see #keyActionType_action_search
           @see #keyActionType_action_send
         */
        public static final int[] keyActionType = {
            0x7f010024, 0x7f010025, 0x7f010026, 0x7f010027
        };
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#action_done}
          attribute's value can be found in the {@link #keyActionType} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:action_done
        */
        public static final int keyActionType_action_done = 0;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#action_go}
          attribute's value can be found in the {@link #keyActionType} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:action_go
        */
        public static final int keyActionType_action_go = 2;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#action_search}
          attribute's value can be found in the {@link #keyActionType} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:action_search
        */
        public static final int keyActionType_action_search = 1;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#action_send}
          attribute's value can be found in the {@link #keyActionType} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:action_send
        */
        public static final int keyActionType_action_send = 3;
        /** Attributes that can be used with a keyType.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #keyType_key_type_action com.anysoftkeyboard.api:key_type_action}</code></td><td></td></tr>
           <tr><td><code>{@link #keyType_key_type_feedback com.anysoftkeyboard.api:key_type_feedback}</code></td><td></td></tr>
           <tr><td><code>{@link #keyType_key_type_function com.anysoftkeyboard.api:key_type_function}</code></td><td></td></tr>
           </table>
           @see #keyType_key_type_action
           @see #keyType_key_type_feedback
           @see #keyType_key_type_function
         */
        public static final int[] keyType = {
            0x7f010021, 0x7f010022, 0x7f010023
        };
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#key_type_action}
          attribute's value can be found in the {@link #keyType} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key_type_action
        */
        public static final int keyType_key_type_action = 1;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#key_type_feedback}
          attribute's value can be found in the {@link #keyType} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key_type_feedback
        */
        public static final int keyType_key_type_feedback = 2;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#key_type_function}
          attribute's value can be found in the {@link #keyType} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key_type_function
        */
        public static final int keyType_key_type_function = 0;
        /**  additional key types that can be used to make themes interesting 
 can auto-detect these, but allow keyboard layout to set some, such as 
 punctuation, navigation, numeric, symbol, alpha 
 for auto-detecting, difference between "punctuation" and "symbol" could just 
 be if the unicode value is above 0x0100, since that's probably close enough 
 intent is that "functional" type is unchanged, so a shift key is still functional 
 to ensure backwards compatibility 
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #keyTypeV2_key_type_alpha com.anysoftkeyboard.api:key_type_alpha}</code></td><td></td></tr>
           <tr><td><code>{@link #keyTypeV2_key_type_delete com.anysoftkeyboard.api:key_type_delete}</code></td><td></td></tr>
           <tr><td><code>{@link #keyTypeV2_key_type_navigation com.anysoftkeyboard.api:key_type_navigation}</code></td><td></td></tr>
           <tr><td><code>{@link #keyTypeV2_key_type_numeric com.anysoftkeyboard.api:key_type_numeric}</code></td><td></td></tr>
           <tr><td><code>{@link #keyTypeV2_key_type_punctuation com.anysoftkeyboard.api:key_type_punctuation}</code></td><td> FOR FUTURE EXPANSION - NOT YET SUPPORTED </td></tr>
           <tr><td><code>{@link #keyTypeV2_key_type_shift com.anysoftkeyboard.api:key_type_shift}</code></td><td></td></tr>
           <tr><td><code>{@link #keyTypeV2_key_type_space com.anysoftkeyboard.api:key_type_space}</code></td><td></td></tr>
           <tr><td><code>{@link #keyTypeV2_key_type_symbol com.anysoftkeyboard.api:key_type_symbol}</code></td><td></td></tr>
           </table>
           @see #keyTypeV2_key_type_alpha
           @see #keyTypeV2_key_type_delete
           @see #keyTypeV2_key_type_navigation
           @see #keyTypeV2_key_type_numeric
           @see #keyTypeV2_key_type_punctuation
           @see #keyTypeV2_key_type_shift
           @see #keyTypeV2_key_type_space
           @see #keyTypeV2_key_type_symbol
         */
        public static final int[] keyTypeV2 = {
            0x7f010042, 0x7f010043, 0x7f010044, 0x7f010045,
            0x7f010046, 0x7f010047, 0x7f010048, 0x7f010049
        };
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#key_type_alpha}
          attribute's value can be found in the {@link #keyTypeV2} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key_type_alpha
        */
        public static final int keyTypeV2_key_type_alpha = 4;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#key_type_delete}
          attribute's value can be found in the {@link #keyTypeV2} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key_type_delete
        */
        public static final int keyTypeV2_key_type_delete = 7;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#key_type_navigation}
          attribute's value can be found in the {@link #keyTypeV2} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key_type_navigation
        */
        public static final int keyTypeV2_key_type_navigation = 1;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#key_type_numeric}
          attribute's value can be found in the {@link #keyTypeV2} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key_type_numeric
        */
        public static final int keyTypeV2_key_type_numeric = 2;
        /**
          <p>
          @attr description
           FOR FUTURE EXPANSION - NOT YET SUPPORTED 


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          <p>This is a private symbol.
          @attr name android:key_type_punctuation
        */
        public static final int keyTypeV2_key_type_punctuation = 0;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#key_type_shift}
          attribute's value can be found in the {@link #keyTypeV2} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key_type_shift
        */
        public static final int keyTypeV2_key_type_shift = 6;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#key_type_space}
          attribute's value can be found in the {@link #keyTypeV2} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key_type_space
        */
        public static final int keyTypeV2_key_type_space = 5;
        /**
          <p>This symbol is the offset where the {@link com.anysoftkeyboard.api.R.attr#key_type_symbol}
          attribute's value can be found in the {@link #keyTypeV2} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name android:key_type_symbol
        */
        public static final int keyTypeV2_key_type_symbol = 3;
    };
}
